plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "com.gradleup.shadow" version "9.0.0-beta4"

}

group = 'com.kammoun'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' } // Spigot snapshots

}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.42")
    annotationProcessor("org.projectlombok:lombok:1.18.42")

    compileOnly 'com.mojang:authlib:1.5.25'
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")


    implementation("de.tr7zw:item-nbt-api:2.15.2")
    implementation 'com.zaxxer:HikariCP:5.0.1'
}

tasks {
    runServer {

        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    relocate("de.tr7zw.changeme.nbtapi", "com.kammoun.Utils.nbtapi")
    relocate("com.zaxxer.hikari", "com.kammoun.Utils.hikari")
    archiveClassifier.set('all')
    mergeServiceFiles()
    //destinationDirectory.set(file(YOUR_OUTPUT_LOCATION))
}
